# 2. Синтаксис. Сложение четных чисел
# Ограничение времени	10 секунд
# Ограничение памяти	64Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# На вход с клавиатуры подаются числа (по одному).
# Нужно вывести на экран сумму всех четных чисел.
# Ввод прекращается, если введена пустая строка (""). При любой ситауации,
# когда не попадаются четные числа, вывести на экран нужно 0 (например,
# числа не были введены вообще или были введены только нечетные числа).
#
# Формат ввода
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
#
# Формат вывода
# 20
#
# Примечания
# Ответ проверяется для целочисенного типа данных посимвольно.
# Т.е., допустим, ответ 100 будет правильным, в то время как 100.0
# выдаст ошибку, поскольку он отличается от правильного на два символа .0


def make_int_list()->list:
    num_list = []
    while True:
        user_input = input().strip()
        if user_input == "":
            break
        try:
            num_list.append(int(user_input))
        except ValueError:
            continue
    return num_list


def even_sum(num_list):
    result = 0
    for i in num_list:
        if i % 2 == 0:
            result += i
    return result


def main():
    num_list = make_int_list()
    print(even_sum(num_list))


if __name__ == "__main__":
    main()