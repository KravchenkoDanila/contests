# 11. Функции. Аргументы 2
# Ограничение времени	10 секунд
# Ограничение памяти	64.0 Мб
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt

# Вам нужно написать функцию lists_sum, которая принимает произвольное количество списков чисел,
# и возвращает сумму всех этих чисел. Предусмотрите дополнительный аргумент unique, который по умолчанию равен False,
# но если в функцию подается unique=True, то функция должна вернуть сумму всех уникальных чисел из всех списков.
# Если поданы только пустые списки или списки чисел вообще не поданы в функцию, то считать сумму чисел нулём.

# Формат ввода
# lists_sum([1, 1], [1], [1, 2, 3])

# lists_sum([1, 1, 1], [1, 1], unique=True)

# lists_sum([1, 1, 1], unique=False)

# Формат вывода
# lists_sum([1, 1], [1], [1, 2, 3]) == 9

# lists_sum([1, 1, 1], [1, 1], unique=True) == 1

# lists_sum([1, 1, 1], unique=False) == 3

from typing import List


def lists_sum(*args: List[int], unique: bool = False) -> int: #TODO сделать проверку на то что в листах действительно int
    result_list = []

    for i in args:
        result_list += i

    if unique:
        result_list = set(result_list)

    return sum(result_list)


